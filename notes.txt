!! Parcing :
-2147483648

+000002147483647

" +1 1 0000001 +00000001" ===> DOUBLONS


2 fevrier:
J'ai commence a mettre mes arguments en un seul, avec strcat, join, dup etc.
Probleme : ./a.out "123 456" "12" "789" "10" "456"
s'arrete au dernier 4
A faire : lldb pour voir pourquoi ca s'arrete ici

6 fevrier:
all_av ok
table ok
parcing ok
Suite : soulager mon gros main avec une fonction stack_init

7 fevrier:
soulager main ok
faire une fonction pour free tout si NULL, write error puis exit (tout exit)
Dans ma ft_stack_init return(ft_error)
Probleme : soucis de free dans mon ft_gather_av (ft_strdup) "12 allocs, 10 frees"

8-9-10 fevrier:
petage de plombs.

12 fevrier: si je finis pas le 16 je MEURS
refaire le ft_gather_av en implementant ft_free_strjoin
Leaks seems ok
Suite : faire les commands youhuuu

13 fevrier :
sa, sb, ss, pa, pb -> ok

14 fevrier : joyeuse journee du luuuuuuv
Continuer les commands

15 fevrier :
commands seem ok (to check)
Suite : recherche algo, force

19 fevrier :
gerer erreurs:
    - "-18446744073709551614" (unsigned long long)

20 fevrier :
unsigned long long OK
Commencement algo

21 fevrier : il est 2h00 du matin j'ai pas envie de faire du velo
Suite: faire sort_three --> creer un index dans ma structure, faire un ft_find_index, ft_mn, ft_max
21 fevrier : retour
Tri de liste de 3 OK
Suite: Continuer l'algo

22 fevrier :
ft_min_on_top OK
Suite : faire structure d'op

28 fevrier :
Demander comment initialiser ma structure t_op !!!
Counter OK --> voir comment l'implementer a mes OP, si ++ a tous ? si ++ si j = 0 ?
si fonction pour ss++ et reset sa et sb ?

29 fevrier :
ft_find_place : OK

3 mars :
ft_find_cheappest a tester
regler mes counter, je ne pense pas les incrementer dans les commandes mais a lexterieur lorsque je calcule
le cout

EXEMPLE:
1/ J'incremente la rotation individuellement (dans mon find cheappest)
if (index_nb < med){counter.ra++ || counter.rb++}

2/ Je trouve combien de fois je peux les combiner en trouvant le plus petit des 2
if (counter.ra > 0 && counter.rb > 0)
while (counter.ra > 0)
while (counter.rb > 0)

Suite :
tester : ft_find_cheappest, rev_rotate_case, rotate_case, les counters

4 mars :
1. Implementer rot et rev_rot case dans mon algo
2. Implementer small sort

5 mars : NOUVEL ESSAI ALGO CHANGEMENT DE GIT ==> push_swap_05_03
4 cases of rotation OK
best_case OK
apply OK

SEG FAULT dans ft_apply_case, ne trouve pas l'index de mon tmp->value quand re rentre dans la boucle

6 mars : OMG CA A TRIER
rajouter un erreur : "245-56" quand nombre colle
Optimiser mes iterations

7 mars : OMG 100% EFFECTUE
Suite : norminette, re check tout

8 mars : push_swap OOOOOOOOOKKKKKK i think (re check + normi car pas save la bonne version)
Suite : continuer bonus --> faire une fonction error

13 mars : checker OK LOL
incorporer strlen_zero dans parcing